rule Σ (A type) ({x : A} B type)
  type

rule pair (A type) ({x : A} B type) (a : A) (b : B{a})
  : Σ A B

rule π₁ (A type) ({x : A} B type) (s : Σ A B)
  : A

rule π₂ (A type) ({x : A} B type) (s : Σ A B)
  : B{π₁ A B s}

rule Σ_β₁ (A type) ({x : A} B type) (a : A) (b : B{a})
  : π₁ A B (pair A B a b) ≡ a : A

(* we want
rule Σ_β₂ (A type) ({x : A} B type) (a : A) (b : B{a})
  : π₂ A B (pair A B a b) ≡ b : B{a}
*)


(* To show that the computation rule for the second projection is well-typed,
   we need to show that
     B (π₁ A ({x : A} B x) (pair A ({x : A} B x) a b)
   equals
     B a
   We use the congruence rule for B using Σ_β₁.
*)

let ξ = derive 
    (A type) 
    ({x : A} B type) 
    (a : A) 
    (b : B{a})
    ->
    congruence 
        (B{π₁ A B (pair A B a b)}) 
        (B{a}) 
        (Σ_β₁ A B a b)

rule Σ_β₂ 
    (A type) 
    ({x : A} B type) 
    (a : A) 
    (b : B{a}) 
    : 
    convert (π₂ A B (pair A B a b)) (ξ A B a b)  ≡ b : B{a}


rule Σ_η (A type) ({x : A} B type) (s : Σ A B)
  : s == pair A B (π₁ A B s) (π₂ A B s) : Σ A B 